## microservice config
spring.application.name=apigateway
server.port=8080
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

## May Java rot in hell forever and ever after
spring.main.web-application-type=reactive
eureka.instance.hostname=localhost
spring.cloud.gateway.discovery.locator.enabled=true
## CORS configuration for API Gateway
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:5173
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
## 2nd method
#spring.cloud.gateway.default-filters[0]=RemoveResponseHeader=Access-Control-Allow-Origin
#spring.cloud.gateway.default-filters[1]=AddResponseHeader=Access-Control-Allow-Origin,http://localhost:5173

## debugging
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

## asset tracking service route
spring.cloud.gateway.routes[0].id=assettrackingservice
spring.cloud.gateway.routes[0].uri=lb://assettrackingservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/tracker/**

## authentication service route
spring.cloud.gateway.routes[1].id=authenticationservice
spring.cloud.gateway.routes[1].uri=lb://authenticationservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/auth/**